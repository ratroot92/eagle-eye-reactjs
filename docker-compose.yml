version: '3.7'
services:
  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    hostname: mongodb
    restart: unless-stopped
    volumes:
      - './database:/data/db'
    command: mongod --port 27017 --bind_ip 0.0.0.0
    networks:
      - main
    environment:
      MONGO_INITDB_ROOT_USERNAME:
      MONGO_INITDB_ROOT_PASSWORD:
      MONGO_INITDB_DATABASE: eagle_eye_db
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    # volumes:
    #   - mongodbdata:/data/db
    ports:
      - '27017:27017'

  backend:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    container_name: backend
    hostname: backend
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html/backend
    ports:
      - 8080:8080
    networks:
      - main
    environment:
      MONGODB_DATABASE: eagle_eye_db
      MONGODB_USERNAME:
      MONGODB_PASSWORD:
      MONGODB_HOSTNAME: mongodb:27017
      MONGODB_PORT: '27017'
      ENV_DEBUG: 'True'
      CELERY_RESULT_BACKEND: amqp://guest:guest@rabbitmq/%2F
      CELERY_TASK_SERIALIZER: 'json'
      CELERY_RESULT_SERIALIZER: 'json'
      CELERY_TIMEZONE:
      REDIS_HOST: redis
      BROKER_URL: redis
      REDIS_PORT: 6379
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq/%2F
    depends_on:
      - mongodb

  redis:
    image: redis:alpine
    networks:
      - main

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:latest
    # environment:
    #   HOSTNAME: ${RABBITMQ_HOSTNAME}
    #   RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
    #   RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
    #   RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - main
    ports:
      - '5672:5672'
    restart: on-failure
    links:
      - mongodb

  celery:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    command: celery -A twitter worker --loglevel=info --loglevel=DEBUG
    hostname: celery
    networks:
      - main
    volumes:
      - ./backend:/var/www/html/backend
    working_dir: /var/www/html/backend
    environment:
      - DEBUG=1
      - SECRET_KEY=724*0cye0yfb=l$kvk9gcuon(22pq^eq)2^8_+4$al7lj2w92
      - DJANGO_ALLOWED_HOSTS=localhost django [::1]
      - PYTHONUNBUFFERED=1
      - MONGODB_DATABASE=eagle_eye_db
      - MONGODB_USERNAME=
      - MONGODB_PASSWORD=
      - MONGODB_HOSTNAME=mongodb
      - MONGODB_PORT:'27017'
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq/%2F
      - CELERY_RESULT_BACKEND=amqp://guest:guest@rabbitmq/%2F
      - INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672//
    depends_on:
      - redis
      - backend
      - mongodb
      - rabbitmq
    links:
      - mongodb
      - rabbitmq
      - redis

  celery-beat:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    command: celery -A twitter  beat --loglevel=info --loglevel=DEBUG
    networks:
      - main
    # volumes:
    #   - ./django/:/var/www/eagle_eye
    environment:
      - DEBUG=1
      - SECRET_KEY=724*0cye0yfb=l$kvk9gcuon(22pq^eq)2^8_+4$al7lj2w92
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - PYTHONUNBUFFERED=1
      - MONGODB_DATABASE=eagle_eye_db
      - MONGODB_USERNAME=
      - MONGODB_PASSWORD=
      - MONGODB_HOSTNAME=mongodb
      - MONGODB_PORT:'27017'
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq/%2F
      - CELERY_RESULT_BACKEND=amqp://guest:guest@rabbitmq/%2F
      - INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672//
    depends_on:
      - redis
      - backend
      - mongodb
      - rabbitmq
    links:
      - mongodb
      - rabbitmq
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend
    container_name: frontend
    networks:
      - main
    ports:
      - 3000:3000
    restart: always
    volumes:
      - ./frontend:/var/www/html/frontend
    depends_on:
      - backend
    links:
      # - db
      - backend
    # environment:
    #   - DOC_ENV=local
    #   - SERVER_PORT=5000
    #   # - SERVER_IP=http://54.151.174.78/api
    #   - SERVER_IP=http://127.0.0.1/api

  nginx:
    build:
      context: ./nginx
      dockerfile: ../Dockerfile.nginx
    container_name: nginx
    networks:
      - main
    ports:
      - 80:80
    links:
      - backend
      - frontend
    depends_on:
      - backend
      - frontend
networks:
  main:
